name: Create Release and Upload Build

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract version from tag
        id: get_version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Generate Data with Gradle
        run: ./gradlew runData

      - name: Build with Gradle
        run: ./gradlew build -Pmod_version=${{ steps.get_version.outputs.version }}

      - name: Get JAR file path
        id: get_jar
        run: |
          JAR_PATH=$(find build/libs -name "*.jar" ! -name "*-sources.jar" ! -name "*-javadoc.jar" | head -n 1)
          echo "path=$JAR_PATH" >> $GITHUB_OUTPUT

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          # Файл, который нужно загрузить. Мы берем путь из предыдущего шага.
          files: ${{ steps.get_jar.outputs.path }}
          # Имя релиза (например, "HBM Modernized v0.0.4-alpha")
          name: "HBM Modernized ${{ github.ref_name }}"
          # Имя тега (например, "v0.0.4-alpha")
          tag_name: ${{ github.ref_name }}
          # Автоматически помечать как пре-релиз
          prerelease: ${{ contains(github.ref_name, '-alpha') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-rc') }}
          # Можно добавить описание релиза здесь, если нужно
          # body: "Автоматическая сборка"